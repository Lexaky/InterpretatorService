// <auto-generated />
using InterpretatorService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InterpretatorService.Migrations
{
    [DbContext(typeof(TestsDbContext))]
    [Migration("20250510080409_UpdateAlgoStepsWithSequence")]
    partial class UpdateAlgoStepsWithSequence
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InterpretatorService.Models.AlgoStep", b =>
                {
                    b.Property<int>("AlgoId")
                        .HasColumnType("integer");

                    b.Property<int>("Step")
                        .HasColumnType("integer");

                    b.Property<string>("VarName")
                        .HasColumnType("text");

                    b.Property<int>("Sequence")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AlgoId", "Step", "VarName", "Sequence");

                    b.ToTable("algosteps", (string)null);
                });

            modelBuilder.Entity("InterpretatorService.Models.Algorithm", b =>
                {
                    b.Property<int>("AlgoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AlgoId"));

                    b.Property<string>("AlgoPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AlgoId");

                    b.ToTable("algorithms", (string)null);
                });

            modelBuilder.Entity("InterpretatorService.Models.AlgoStep", b =>
                {
                    b.HasOne("InterpretatorService.Models.Algorithm", null)
                        .WithMany()
                        .HasForeignKey("AlgoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
